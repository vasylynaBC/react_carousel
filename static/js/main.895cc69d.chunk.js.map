{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImage","setCurrentImage","carouselWidth","maxImages","length","disableAction","disableActionNext","className","style","width","transition","map","img","index","height","transform","src","alt","toString","type","onClick","prev","Math","max","disabled","min","initialSettingsState","size","duration","App","settings","setSettings","value","onChange","event","prevState","Number","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.895cc69d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype CarouselProps = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite:boolean;\n};\nconst Carousel: React.FC <CarouselProps> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(0); // setting images by index\n\n  const carouselWidth = frameSize * itemWidth;\n  const maxImages = images.length - frameSize;\n  const disableAction = !infinite && currentImage === 0;\n  const disableActionNext = !infinite && currentImage === maxImages;\n\n  const prevItems = () => (\n    currentImage === 0\n      ? setCurrentImage(maxImages)\n      : setCurrentImage(prev => Math.max((prev - step), 0))\n  );\n\n  const nextItems = () => (\n    currentImage !== maxImages\n      ? setCurrentImage(prev => Math.min(prev + step, maxImages))\n      : setCurrentImage(0)\n  );\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${carouselWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: `${carouselWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        {images.map((img, index) => (\n          <li\n            key={img}\n            style={{\n              width: `${itemWidth}px`,\n              height: `${itemWidth}px`,\n              transform: `translateX(${-currentImage * 100}%)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={img}\n              alt={(index + 1).toString()}\n              style={{\n                width: `${itemWidth}px`,\n                height: `${itemWidth}px`,\n                transition: `${animationDuration}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel_button\">\n        <button\n          type=\"button\"\n          className=\"Carousel_prev\"\n          onClick={prevItems}\n          disabled={disableAction}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className=\"Carousel_next\"\n          onClick={nextItems}\n          disabled={disableActionNext}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\nconst initialSettingsState = {\n  itemWidth: 130,\n  size: 3,\n  step: 3,\n  duration: 1000,\n  infinite: false,\n};\n\nconst App: React.FC = () => {\n  const [settings, setSettings] = useState(initialSettingsState);\n  const {\n    itemWidth,\n    size,\n    step,\n    duration,\n    infinite,\n  } = settings;\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={size}\n        itemWidth={itemWidth}\n        animationDuration={duration}\n        infinite={infinite}\n      />\n      <div className=\"input\">\n        <label className=\"input_label\">\n          Item width:\n          <input\n            className=\"input_value\"\n            type=\"number\"\n            min={130}\n            max={400}\n            step={15}\n            value={itemWidth}\n            onChange={event => setSettings(prevState => ({\n              ...prevState,\n              itemWidth: Number(event.target.value),\n            }))}\n          />\n        </label>\n        <label className=\"input_label\">\n          Frame Size:\n          <input\n            className=\"input_value\"\n            type=\"number\"\n            min={1}\n            max={10}\n            step={1}\n            value={size}\n            onChange={event => setSettings(prevState => ({\n              ...prevState,\n              size: Number(event.target.value),\n            }))}\n          />\n        </label>\n        <label className=\"input_label\">\n          Step:\n          <input\n            className=\"input_value\"\n            type=\"number\"\n            min={1}\n            max={10}\n            step={1}\n            value={step}\n            onChange={event => setSettings(prevState => ({\n              ...prevState,\n              step: Number(event.target.value),\n            }))}\n          />\n        </label>\n        <label className=\"input_label\">\n          Animation Duration:\n          <input\n            className=\"input_value\"\n            type=\"number\"\n            min={0}\n            step={100}\n            value={duration}\n            onChange={event => setSettings(prevState => ({\n              ...prevState,\n              duration: Number(event.target.value),\n            }))}\n          />\n        </label>\n        <label\n          className=\"input_label\"\n        >\n          Infinite:\n          <input\n            className=\"input_value\"\n            type=\"checkbox\"\n            onChange={() => setSettings(prevState => ({\n              ...prevState,\n              infinite: !infinite,\n            }))}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}